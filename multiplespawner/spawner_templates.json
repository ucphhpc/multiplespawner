[
    {
        "name": "SwarmSpawner",
        "class": "jhub.SwarmSpawner",
        "kwargs": {
            "jupyterhub_service_name": "jupyterhub",
            "networks": ["jupyterhub_default"],
            "container_spec": {
                "command": "start-notebook.sh",
                "args": ["--NotebookApp.default_url=/lab"]
            },
            "dockerimages": [
                {
                    "image": "nielsbohr/python-notebook",
                    "name": "Python Notebook"
                }
            ]
        },
        "resource_type": "container",
        "providers": ["local"]
    },
    {
        "name": "DockerSpawner",
        "class": "dockerspawner.DockerSpawner",
        "kwargs": {"remove": "True"},
        "resource_type": "container",
        "providers": ["oci"]
    },
    {
        "name": "Aws Container Spawner",
        "class": "aws_fargate_spawner",
        "resource_type": "container",
        "providers": ["aws"]
    },
    {
        "name": "Aws EC2 Instance",
        "class": "aws_ec2_spawner",
        "resource_type": "virtual_machine",
        "providers": ["aws"]
    },
    {
        "name": "VirtualMachine Spawner",
        "class": "sshspawner.sshspawner.SSHSpawner",
        "resource_type": "virtual_machine",
        "configurer": {
            "class": "corc.configurer.AnsibleConfigurer",
            "options": {
                "host_variables": {
                    "ansible_connection": "ssh",
                    "ansible_user": "opc",
                    "ansible_become": "yes",
                    "ansible_host_key_checking": "False",
                    "verbosity": "verbosity"
                },
                "host_settings": {
                    "group": "compute",
                    "port": "22"
                },
                "apply_kwargs": {
                    "playbook_path": ""
                }
            }
        },
        "authenticator": "corc.authenticator.SSHAuthenticator",
        "providers": ["oci"]
    },
    {
        "name": "Local Process Spawner",
        "class": "jupyterhub.spawner.SimpleLocalProcessSpawner",
        "resource_type": "bare_metal",
        "providers": ["local"]
    }
]
