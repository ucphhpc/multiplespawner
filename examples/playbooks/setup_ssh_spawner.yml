- hosts: compute
  # Git clone the sshspawner
  vars:
    ansible_user: "opc"
    ansible_become: "yes"
    ansible_become_method: "sudo"
    new_username: "spawner"

    ansible_python_interpreter: /usr/bin/python
    python3_path: /usr/bin/python3
    pip3_path: /usr/bin/pip3

    sshspawner:
      name: "sshspawner"
      src: "/home/opc/sshspawner"
      repo: "https://github.com/NERSC/sshspawner.git"
      src_getport: "/home/opc/sshspawner/scripts/get_port.py"
      dest_getport: "/usr/local/bin/get_port.py"

  tasks:
  - name: install packages
    yum:
      state: present
      name:
        - git
        - python3

  - name: install python packages
    pip:
      name:
        - jupyter
      extra_args: --user
      executable: "{{ pip3_path }}"

  - name: "clone {{ sshspawner.name }}"
    git:
      repo: "{{ item.repo }}"
      dest: "{{ item.dest }}"
      clone: yes
    with_items:
      - { repo: "{{ sshspawner.repo }}", dest: "{{ sshspawner.src }}" }

  - name: "install {{ sshspawner.name }}"
    shell:
      cmd: "{{ python3_path }} setup.py install"
      chdir: "{{ sshspawner.src }}"

  - name: move the get_port.py to the default location
    command: "cp {{ item.src }} {{ item.dest }}"
    with_items:
      - { src: "{{ sshspawner.src_getport }}", dest: "{{ sshspawner.dest_getport }}" }

  - name: "Add executable user: {{ new_username }} "
    user:
      name: "{{ new_username }}"
      home: "/home/{{ new_username }}"
      shell: /bin/bash
      groups: users
      append: yes
      
  - name: Copy keys to user
    authorized_key:
      user: "{{ new_username }}"
      state: present
      key: "{{ public_key }}"

  # If the default ansible_user should be renamed
  # - name: Move home directory
  #   user:
  #     name: "{{ ansible_user }}"
  #     home: "/home/{{ new_username }}"
  #     move_home: yes
  #   when: new_username is defined

  # - name: "Rename {{ ansible_user}} to {{ new_username }}"
  #   command: "usermod --login {{ new_username }} {{ ansible_user }}"
  #   ignore_errors: true
  #   when: new_username is defined